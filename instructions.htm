<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
a:link, span.MsoHyperlink
	{color:#0563C1;
	text-decoration:underline;}
.MsoPapDefault
	{margin-bottom:8.0pt;
	line-height:107%;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>

</head>

<body lang=EN-US link="#0563C1" vlink="#954F72" style='word-wrap:break-word'>

<div class=WordSection1>

<p class=MsoNormal><b>M365 Password Expiry Date Report- Sample Output&nbsp;</b></p>

<p class=MsoNormal>The output of the password expiry report contains the most
essential attributes like</p>

<ul style='margin-top:0in' type=disc>
 <li class=MsoNormal>Display Name</li>
 <li class=MsoNormal>User Principal Name</li>
 <li class=MsoNormal>Password last Change Date</li>
 <li class=MsoNormal>Password Since Last Set (Password Age)</li>
 <li class=MsoNormal>Password Expiration Date</li>
 <li class=MsoNormal>Friendly Expiry Time</li>
 <li class=MsoNormal>Days Since Expiry/Days to Expiry</li>
 <li class=MsoNormal>License Status</li>
 <li class=MsoNormal>Sign-in Status</li>
 <li class=MsoNormal>Last sign-in Date</li>
 <li class=MsoNormal>Inactive Days</li>
</ul>

<p class=MsoNormal><img width=624 height=157 id="Picture 2"
src="instructions_files/image001.png" alt="M365 users password expiry report"></p>

<p class=MsoNormal><b>Export Password Last Change Date Report – Script
Execution Steps&nbsp;</b></p>

<ol style='margin-top:0in' start=1 type=1>
 <li class=MsoNormal>Download the script.</li>
 <li class=MsoNormal>Start the Windows PowerShell.</li>
 <li class=MsoNormal>Run the script directly or pass built-in filtering params
     based on your requirement.</li>
</ol>

<p class=MsoNormal>To list all Microsoft 365 users and their date of last
password change, download the above script and execute as follows.</p>

<p class=MsoNormal>PowerShell</p>

<table class=MsoNormalTable border=0 cellpadding=0 width=208 style='width:156.05pt;
 margin-left:-.75pt'>
 <tr>
  <td width=208 valign=top style='width:156.05pt;background:#EEEEEE;padding:
  9.0pt 9.0pt 9.0pt 9.0pt'>
  <p class=MsoNormal><span style='color:black'>./PasswordExpiryReport.ps1</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal>The exported report will contain password details of all the
users (excluding external users).</p>

<p class=MsoNormal><b>Unlock Full Potential of “M365 Password Expiry Report”
PowerShell Script&nbsp;</b></p>

<p class=MsoNormal>As said earlier, you can use this PowerShell script for
multiple use-cases. I.e., you can generate multiple password reports using this
script. We have listed a few significant reports.</p>

<ol style='margin-top:0in' start=1 type=1>
 <li class=MsoNormal><a
     href="https://o365reports.com/2020/02/17/export-office-365-users-last-password-change-date-to-csv/#passwordexpiryreport">Get
     Office 365 users’ password expiration date report</a></li>
 <li class=MsoNormal><a
     href="https://o365reports.com/2020/02/17/export-office-365-users-last-password-change-date-to-csv/#soontoexpirepasswords">View
     soon-to-expire password users</a></li>
 <li class=MsoNormal><a
     href="https://o365reports.com/2020/02/17/export-office-365-users-last-password-change-date-to-csv/#passwordexpiredusersreport">Export
     password expired users report</a></li>
 <li class=MsoNormal><a
     href="https://o365reports.com/2020/02/17/export-office-365-users-last-password-change-date-to-csv/#Passwordneverexpiresusers">List
     M365 users whose Password set to never expires</a></li>
 <li class=MsoNormal><a
     href="https://o365reports.com/2020/02/17/export-office-365-users-last-password-change-date-to-csv/#Passwordreportforsigninenabledusers">Get
     Password expiry report for enabled users</a></li>
 <li class=MsoNormal><a
     href="https://o365reports.com/2020/02/17/export-office-365-users-last-password-change-date-to-csv/#Passwordreportforlicensedusers">Check
     password last change time and expiry date for licensed users</a></li>
 <li class=MsoNormal><a
     href="https://o365reports.com/2020/02/17/export-office-365-users-last-password-change-date-to-csv/#recentpasswordchangers">Find
     recently password changed users</a></li>
 <li class=MsoNormal><a
     href="https://o365reports.com/2020/02/17/export-office-365-users-last-password-change-date-to-csv/#Passwordexpiryreport">Export
     more granular password status reports</a></li>
 <li class=MsoNormal><a
     href="https://o365reports.com/2020/02/17/export-office-365-users-last-password-change-date-to-csv/#schedulepasswordexpiryreport">Schedule
     password expiry report</a></li>
</ol>

<p class=MsoNormal><b>1. Export Microsoft 365 Users’ Password Expiration Date</b></p>

<p class=MsoNormal>Retrieving password expiry date helps you to send a quick
reminder to the password about to expire users. So, you can prevent users from
account locking.</p>

<p class=MsoNormal>To retrieve all azure ad users with their password expiry
date, run the script as follows.</p>

<p class=MsoNormal>PowerShell</p>

<table class=MsoNormalTable border=0 cellpadding=0 width=208 style='width:156.05pt;
 margin-left:-.75pt'>
 <tr>
  <td width=208 valign=top style='width:156.05pt;background:#EEEEEE;padding:
  9.0pt 9.0pt 9.0pt 9.0pt'>
  <p class=MsoNormal><span style='color:black'>./PasswordExpiryReport.ps1</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal>The exported report lists all Office 365 users’ password
expiration date and password last change date.</p>

<p class=MsoNormal><b><i>Tips:</i></b>&nbsp;Accounts with passwords that have
not been changed for a long time may be at higher risk of being compromised.
Admins can proactively address these risks by&nbsp;<a
href="https://o365reports.com/2023/11/09/manage-microsoft-365-passwords-from-the-security-info-page/"
target="_blank">prompting users to update their passwords</a>.</p>

<p class=MsoNormal><b>2. Find Soon-to-Expire Password Users in Microsoft 365</b></p>

<p class=MsoNormal>The soon-to-expire password users report allows you to
generate a report based on the number of days remaining until password expiry.
With this report, you can identify passwords that are about to expire and
remind users to change their passwords by sending password expiry
notifications.</p>

<p class=MsoNormal>To view users with soon-to-expire password, run the script
using the ‘<b>SoonToExpire</b>‘&nbsp;param with number of days.</p>

<p class=MsoNormal>PowerShell</p>

<table class=MsoNormalTable border=0 cellpadding=0 width=326 style='width:244.25pt;
 margin-left:-.75pt'>
 <tr>
  <td width=326 valign=top style='width:244.25pt;background:#EEEEEE;padding:
  9.0pt 9.0pt 9.0pt 9.0pt'>
  <p class=MsoNormal><span style='color:black'>./PasswordExpiryReport.ps1
  -SoonToExpire 7</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal>The above format exports a list of users whose passwords are
about to expire in 7 days.</p>

<p class=MsoNormal><i>Note:</i>&nbsp;Soon to expire password report doesn’t
include password expired users.</p>

<p class=MsoNormal><b>3. View Password Expired Users using PowerShell</b></p>

<p class=MsoNormal>To list users whose password has expired, run the script
with ‘<b>PwdExpired</b>‘&nbsp;switch param. By using this report, you can
notify users about password expiry.&nbsp;Also, you can&nbsp;<a
href="https://o365reports.com/2023/06/21/microsoft-365-inactive-user-report-ms-graph-powershell/"
target="_blank">identify inactive users</a>&nbsp;through their password expiry
status.</p>

<p class=MsoNormal>PowerShell</p>

<table class=MsoNormalTable border=0 cellpadding=0 width=300 style='width:224.8pt;
 margin-left:-.75pt'>
 <tr>
  <td width=300 valign=top style='width:224.8pt;background:#EEEEEE;padding:
  9.0pt 9.0pt 9.0pt 9.0pt'>
  <p class=MsoNormal><span style='color:black'>./PasswordExpiryReport.ps1
  -PwdExpired</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal>The above script exports all password expired users
available in the Microsoft 365 organization.</p>

<p class=MsoNormal><b><i>Tip:</i></b>&nbsp;You can&nbsp;<a
href="https://o365reports.com/2022/08/18/reduce-help-desk-calls-by-enabling-self-service-password-reset/"
target="_blank">enable self-service password reset</a>&nbsp;(SSPR) in M365 to
assist users who forget their passwords or when their passwords expire. With
SSPR, users can reset their passwords by verifying their identity, reducing the
number of helpdesk calls for password resets. You can&nbsp;<a
href="https://o365reports.com/2024/02/13/export-microsoft-365-users-self-service-password-reset-sspr-status-reports/"
target="_blank">generate SSPR status report</a>&nbsp;to verify users self
service password reset status.</p>

<p class=MsoNormal><b>4. Get a List of Users with Password Never Expires</b></p>

<p class=MsoNormal>Using ‘<b>PwdNeverExpires</b>‘&nbsp;switch, you can retrieve
users whose password set to never expire.</p>

<p class=MsoNormal>PowerShell</p>

<table class=MsoNormalTable border=0 cellpadding=0 width=339 style='width:254.1pt;
 margin-left:-.75pt'>
 <tr>
  <td width=339 valign=top style='width:254.1pt;background:#EEEEEE;padding:
  9.0pt 9.0pt 9.0pt 9.0pt'>
  <p class=MsoNormal><span style='color:black'>./PasswordExpiryReport.ps1
  -PwdNeverExpires</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal>Note: Microsoft recommends to&nbsp;<a
href="https://m365scripts.com/microsoft365/set-office-365-users-password-to-never-expire-using-ms-graph-powershell/"
target="_blank">set password never expires</a>&nbsp;to prevent unneeded
password change. Because when users&nbsp;forced to change their password, often
they choose a small, predictable alteration to their existing password or
reusing their old passwords.</p>

<p class=MsoNormal><b><i>Tip:</i></b>&nbsp;Admins can also&nbsp;<a
href="https://blog.admindroid.com/ban-custom-passwords-in-office-365-with-azuread-password-protection/"
target="_blank">ban custom password usage</a>&nbsp;to prevent users from using
guessable passwords.</p>

<p class=MsoNormal><b>5. Get Password Expiry Report for Sign-in Enabled Users</b></p>

<p class=MsoNormal>Most organizations don’t delete terminated user accounts;
instead, they disable them as part of&nbsp;<a
href="https://blog.admindroid.com/office-365-offboarding-best-practices/"
target="_blank">Microsoft 365 offboarding best practices</a>. In such cases,
ignoring disabled users is a wise choice. To view the password last change date
for only sign-in enabled users, run the script with the ‘<b>EnabledUsersOnly</b>‘
param.</p>

<p class=MsoNormal>PowerShell</p>

<table class=MsoNormalTable border=0 cellpadding=0 width=344 style='width:258.05pt;
 margin-left:-.75pt'>
 <tr>
  <td width=344 valign=top style='width:258.05pt;background:#EEEEEE;padding:
  9.0pt 9.0pt 9.0pt 9.0pt'>
  <p class=MsoNormal><span style='color:black'>./PasswordExpiryReport.ps1
  -EnabledUsersOnly</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal>The above format exports password details of all the sign-in
enabled users and ignores the sign-in disabled users.</p>

<p class=MsoNormal><b>6. Get Microsoft 365 Password Last Change Date and Expiry
Date for Licensed Users</b></p>

<p class=MsoNormal>While&nbsp;<a
href="https://blog.admindroid.com/automate-microsoft-365-user-offboarding-with-powershell/"
target="_blank">automating the M365 offboarding</a>&nbsp;process, licenses will
be removed from users. In some cases, admins may need to focus solely on user
accounts, disregarding shared and room mailboxes, which typically don’t have
licenses. To address this scenario, we have developed a script with the ‘<b>LicensedUsersOnly’</b>&nbsp;parameter.</p>

<p class=MsoNormal>By using –LicensedUserOnly&nbsp;switch, you can&nbsp;<a
href="https://o365reports.com/2018/12/14/export-office-365-user-license-report-powershell/"
target="_blank">export licensed users’</a>&nbsp;password related attributes
like password last change date, password age, password expiration date, days to
password expiry, etc.</p>

<p class=MsoNormal>PowerShell</p>

<table class=MsoNormalTable border=0 cellpadding=0 width=343 style='width:257.4pt;
 margin-left:-.75pt'>
 <tr>
  <td width=343 valign=top style='width:257.4pt;background:#EEEEEE;padding:
  9.0pt 9.0pt 9.0pt 9.0pt'>
  <p class=MsoNormal><span style='color:black'>./PasswordExpiryReport.ps1
  -LicensedUserOnly</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal>The exported report will contain all licensed users and
their password details.</p>

<p class=MsoNormal><b>7. Export Recently Password Changed Users Report</b></p>

<p class=MsoNormal>By keeping track of recent password changes, admins can
quickly identify any unusual activity and take appropriate action if needed. To
get a list of recent password changers report, run the script with ‘<b>RecentPwdChanges</b>‘&nbsp;param.
You can pass the number of days in –RecentPwdChanges param.</p>

<p class=MsoNormal>PowerShell</p>

<table class=MsoNormalTable border=0 cellpadding=0 width=369 style='width:276.85pt;
 margin-left:-.75pt'>
 <tr>
  <td width=369 valign=top style='width:276.85pt;background:#EEEEEE;padding:
  9.0pt 9.0pt 9.0pt 9.0pt'>
  <p class=MsoNormal><span style='color:black'>./PasswordExpiryReport.ps1
  -RecentPwdChanges 7</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal>The above script will export a list of users who changed
their password in the past 7 days.</p>

<p class=MsoNormal><b>8. Export More Granular Password Status Report</b></p>

<p class=MsoNormal>To get a more granular password report, you can use multiple
filters together. For example,</p>

<p class=MsoNormal>PowerShell</p>

<table class=MsoNormalTable border=0 cellpadding=0 width=472 style='width:354.0pt;
 margin-left:-.75pt'>
 <tr>
  <td width=472 valign=top style='width:354.0pt;background:#EEEEEE;padding:
  9.0pt 9.0pt 9.0pt 9.0pt'>
  <p class=MsoNormal><span style='color:black'>./PasswordExpiryReport.ps1
  -PasswordExpired –LicensedUserOnly</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal>The above script will export all licensed users whose
password was expired.</p>

<p class=MsoNormal><b>9. Execute the Script with Certificate
(Scheduler-friendly)</b></p>

<p class=MsoNormal>To automate the script execution, you can use certificates
for authentication. Depending on your requirements, you can choose to use a
certificate authority (CA) or&nbsp;<a
href="https://blog.admindroid.com/how-to-create-self-signed-certificate-using-powershell/"
target="_blank">create a self-signed certificate</a>, which is cost-effective.</p>

<p class=MsoNormal>The script can be executed with Certificate-based
Authentication(CBA) by specifying the TenantId, ClientId, and
CertificateThumbPrint parameters in the following format:</p>

<p class=MsoNormal>PowerShell</p>

<table class=MsoNormalTable border=0 cellpadding=0 width=786 style='width:589.2pt;
 margin-left:-.75pt'>
 <tr>
  <td width=786 valign=top style='width:589.2pt;background:#EEEEEE;padding:
  9.0pt 9.0pt 9.0pt 9.0pt'>
  <p class=MsoNormal><span style='color:black'>./PasswordExpiryReport.ps1
  -TenantId &lt;TenantId&gt; -ClientId &lt;ClientId&gt; -CertificateThumbprint
  &lt;Certthumbprint&gt;</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal>This format can also be used to schedule the&nbsp;<a
href="https://o365reports.com/2019/08/02/schedule-powershell-script-task-scheduler/"
target="_blank">script as a scheduled task</a>&nbsp;in the Windows Task
Scheduler.</p>

<p class=MsoNormal>However, it’s important to note that before using
certificate-based authentication, you must&nbsp;<a
href="https://o365reports.com/2023/08/29/how-to-register-azure-ad-application-from-azure-portal/"
target="_blank">register an app in Azure AD</a>. You can also automate these
processes—app registration, creating a certificate, and connecting to MS Graph
using the certificate—via PowerShell by downloading the PowerShell
script:&nbsp;<a
href="https://blog.admindroid.com/connect-to-microsoft-graph-powershell-using-certificate/#Register_AzureAD_app_using_PS_script"
target="_blank">automate app-only access</a></p>

<p class=MsoNormal>&nbsp;</p>

</div>

</body>

</html>
